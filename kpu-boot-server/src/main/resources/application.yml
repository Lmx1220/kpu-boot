spring:
  profiles:
    group:
      # 覆盖顺序和这里的顺序无关，跟 --- 分割的顺序有关
      "dev": "dev,common,mysql,rabbitmq,redis"
      "prod": "prod,common,mysql,rabbitmq,redis"

---
# 相当于 common.yml
kpu:
  scan:
    enabled: true
    basePackage: cn.lmx
  webmvc:
    undertow: true
    header: false
  authentication:
    # jwt 签名，长度至少32位。 建议每个公司都修改一下这个字符串
    jwtSignKey: 'kpu-cloud_is_a_fantastic_project'
    expire: 28800               # token有效期为8小时
    refreshExpire: 86400        # 刷新token有效期为24小时
  system:
    # 登录时否验证密码有效性 （常用于开发环境快速登录）
    verifyPassword: true
    # 登录时否验证验证码有效性 （常用于开发环境快速登录）
    verifyCaptcha: true
    # 默认用户密码
    defPwd: '123456'
    # 密码最大输错次数  小于0不限制
    maxPasswordErrorNum: 10
    # 密码错误锁定用户时间  除了0表示锁定到今天结束，还支持m、h、d、w、M、y等单位
    passwordErrorLockUserTime: '0'
    # 缓存Key前缀
    cachePrefix: lc
    # oauth 服务扫描枚举类的包路径
    enumPackage: "cn.lmx"
  ignore:
    # 是否启用网关的 uri权限鉴权 (设置为false，则后台不校验访问权限)
    authEnabled: true
    # 前端校验按钮 是否区分大小写
    caseSensitive: false
    anyone: # 请求中 需要携带Tenant 且 需要携带Token(不需要登录)，但不需要验证uri权限
      ALL:
        - /**/anyone/**
        - /service/model/*/json
        - /service/model/*/save
        - /service/editor/stencilset
    anyUser: # 请求中 需要携带Tenant，但 不需要携带Token(不需要登录) 和 不需要验证uri权限
      ALL:
        - /**/anyUser/**
    anyTenant: # 请求中 不需要携带Tenant 且 不需要携带Token(不需要登录) 和 不需要验证uri权限
      ALL:
        - /**/anyTenant/**
  echo: #详情看: EchoProperties
    # 是否启用 远程数据 手动注入
    enabled: true
    # 是否启用 远程数据 注解AOP注入
    aop-enabled: true
    # 字典类型 和 code 的分隔符
    dictSeparator: '###'
    # 多个字典code 之间的的分隔符
    dictItemSeparator: ','
    # 递归最大深度
    maxDepth: 3
    # 本地缓存配置信息 生产慎用
    guavaCache:
      enabled: false
      maximumSize: 1000
      refreshWriteTime: 2
      refreshThreadPoolSize: 10
  log: # 详情看：OptLogProperties
    # 开启记录操作日志
    enabled: true
    # 记录到什么地方  DB:mysql LOGGER:日志文件
    type: DB
  xss:
    # 是否开启 xss 过滤器  详情看：XssProperties
    enabled: true
    # 是否启用 RequestBody 注解标记的参数 反序列化时过滤XSS
    requestBodyEnabled: false
    ignoreParamValues:
      - noxss
  captcha:
    # 登录界面的验证码配置 详情看：CaptchaProperties
    type: ARITHMETIC
    width: 158
    height: 58
    len: 2
    charType: 2
  async: # 全局线程池配置
    corePoolSize: 2
    maxPoolSize: 50
    queueCapacity: 10000
    keepAliveSeconds: 300
    threadNamePrefix: 'kpu-async-executor-'
  swagger:
    license: Powered By lmx
    licenseUrl: https://github.com/lmx
    termsOfServiceUrl: https://github.com/lmx
    version: @project.version@
    contact: # 联系人信息
      url: https://github.com/lmx
      name: zuiou
      email: 306479353@qq.com
    global-operation-parameters: # 全局参数
      - name: Token
        description: 用户信息
        modelRef: String
        parameterType: header
        required: true
        # 默认值只是方便本地开发时，少填参数，生产环境请禁用swagger或者禁用默认参数
        defaultValue: "test"
      - name: Authorization
        description: 客户端信息
        modelRef: String
        parameterType: header
        required: true
        defaultValue: "bGFtcF93ZWI6bGFtcF93ZWJfc2VjcmV0"
      - name: ApplicationId
        description: 应用ID
        modelRef: String
        parameterType: header
        required: true
        defaultValue: "1"
  file:
    storageType: LOCAL #  FAST_DFS LOCAL MIN_IO ALI_OSS HUAWEI_OSS QINIU_OSS
    delFile: false
    local:
      storage-path: /Users/lmx/data/projects/uploadfile/file/     # 文件存储路径  （ 某些版本的 window 需要改成  D:\\data\\projects\\uploadfile\\file\\  ）
      urlPrefix: http://127.0.0.1/file/   # 文件访问 （部署nginx后，配置nginx的ip，并配置nginx静态代理storage-path地址的静态资源）
      inner-uri-prefix: null  #  内网的url前缀
    fastDfs:
      urlPrefix: https://fastdfs.lmx.top/
    ali:
      # 请填写自己的阿里云存储配置
      uriPrefix: "http://lmx-admin-cloud.oss-cn-beijing.aliyuncs.com/"
      bucket-name: "lmx-admin-cloud"
      endpoint: "oss-cn-beijing.aliyuncs.com"
      access-key-id: "填写你的id"
      access-key-secret: "填写你的秘钥"
    minIo:
      endpoint: "http://127.0.0.1:9000/"
      accessKey: "kpu"
      secretKey: "kpu"
      bucket: "dev"
    huawei:
      uriPrefix: "dev.obs.cn-southwest-2.myhuaweicloud.com"
      endpoint: "obs.cn-southwest-2.myhuaweicloud.com"
      accessKey: "1"
      secretKey: "2"
      location: "cn-southwest-2"
      bucket: "dev"
    qiNiu:
      zone: "z0"
      accessKey: "1"
      secretKey: "2"
      bucket: "lmx_admin_cloud"
  generator:
    outputDir: /Users/lmx/gitlab/kpu-boot
    frontOutputDir: /Users/lmx/gitlab/kpu-web-pro
    # 作者
    author: lmx
    # 默认项目
    projectType: BOOT
    #  # 去除表前缀
    #  tablePrefix:
    #    - xxx_
    #  # 去除字段前缀
    #  fieldPrefix:
    #    - xxx_
    #  # 去除字段后缀
    #  fieldSuffix:
    #    - xxx_
    # 项目前缀
    projectPrefix: 'kpu'
    superClass: SUPER_CLASS
    # 生成方式
    genType: GEN
    packageInfoConfig: # 其他配置建议保持PackageInfoConfig中的默认值
      # 生成代码位于 src/main/java 下的基础包
      parent: 'cn.lmx.kpu'
      utilParent: 'cn.lmx.basic'
    entity-config:
      # 时间类型对应策略  ONLY_DATE: java.util  SQL_PACK:java.sql  TIME_PACK: java.time
      dateType: TIME_PACK
      # Entity类的父类
      entitySuperClass: ENTITY
      # 指定生成的主键的ID类型 (${superClass} == NONE 时，新生成的实体才生效)
      idType: INPUT
      # 数据库表字段映射到实体的命名策略
      columnNaming: underline_to_camel
      # 忽略字段（字段名）
      # ignoreColumns:
      #   - xxx
      # 【实体】 是否生成字段常量
      columnConstant: false
      # 【实体、VO】是否为链式模型
      chain: true
      # 【实体、VO】 是否为lombok模型
      lombok: true
      # 乐观锁字段名称
      versionColumnName: ''
      # 乐观锁属性名称
      versionPropertyName: ''
      # 逻辑删除字段名称
      logicDeleteColumnName: ''
      # 逻辑删除属性名称
      logicDeletePropertyName: ''
      fillColumnName:
        xxx: INSERT
      # 格式化SaveVO文件名称
      formatSaveVoFileName: ''
      # 格式化UpdateVO文件名称
      formatUpdateVoFileName: ''
      # 格式化ResultVO文件名称
      formatResultVoFileName: ''
      # 格式化 PageQuery 文件名称
      formatPageQueryFileName: ''
    mapperConfig:
      formatMapperFileName: ''
      formatXmlFileName: ''
      mapperAnnotation: false
      #    columnAnnotationTablePrefix:
      #      - xxx
      baseResultMap: true
      cache: false
      baseColumnList: true
      cacheClass: org.apache.ibatis.cache.decorators.LoggingCache
    #  serviceConfig:
    #  managerConfig:
    #  controllerConfig:
    #  webProConfig:
    fileOverrideStrategy:
      entityFileOverride: OVERRIDE
      sqlFileOverride: OVERRIDE
      mapperFileOverride: EXIST_IGNORE
      xmlFileOverride: OVERRIDE
      managerFileOverride: EXIST_IGNORE
      serviceFileOverride: EXIST_IGNORE
      controllerFileOverride: EXIST_IGNORE
      apiModelFileOverride: OVERRIDE
      langFileOverride: OVERRIDE
      indexEditTreeFileOverride: EXIST_IGNORE
      dataFileOverride: EXIST_IGNORE
    constantsPackage:
      # 业务服务 后台手动改动过的枚举
      FieldFill: com.baomidou.mybatisplus.annotation.FieldFill
      SuperClassEnum: cn.lmx.kpu.generator.enumeration.SuperClassEnum
      EntitySuperClassEnum: cn.lmx.kpu.generator.enumeration.EntitySuperClassEnum
      # common 常量
      EchoDictType: cn.lmx.kpu.model.constant.EchoDictType
      EchoApi: cn.lmx.kpu.model.constant.EchoApi
      # common 公共枚举
      HttpMethod: cn.lmx.kpu.model.enumeration.HttpMethod
      BooleanEnum: cn.lmx.kpu.model.enumeration.BooleanEnum
      StateEnum: cn.lmx.kpu.model.enumeration.StateEnum
      UserStatusEnum: cn.lmx.kpu.model.enumeration.base.UserStatusEnum
      RoleCategoryEnum: cn.lmx.kpu.model.enumeration.base.RoleCategoryEnum
      ActiveStatusEnum: cn.lmx.kpu.model.enumeration.base.ActiveStatusEnum
      OrgTypeEnum: cn.lmx.kpu.model.enumeration.base.OrgTypeEnum
      FileType: cn.lmx.kpu.model.enumeration.base.FileType
      DateType: cn.lmx.kpu.model.enumeration.base.DateType
      DictClassifyEnum: cn.lmx.kpu.model.enumeration.system.DictClassifyEnum
      DataTypeEnum: cn.lmx.kpu.model.enumeration.system.DataTypeEnum

#FAST_DFS配置
fdfs:
  soTimeout: 1500
  connectTimeout: 600
  thumb-image:
    width: 150
    height: 150
  tracker-list:
    - 39.108.109.234:22122
  pool:
    #从池中借出的对象的最大数目
    max-total: 153
    max-wait-millis: 102
    jmx-name-base: 1
    jmx-name-prefix: 1

springdoc:
  # 默认是false，需要设置为true
  default-flat-param-object: true
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'oauth_auth'
      displayName: 'oauth'
      paths-to-match: '/**'
      packages-to-scan: cn.lmx.kpu.oauth
    - group: 'base_base'
      displayName: 'base-基础模块'
      paths-to-match: '/**'
      packages-to-scan: cn.lmx.kpu.base
    - group: 'base_file'
      paths-to-match: '/**'
      displayName: 'base-文件模块'
      packages-to-scan: cn.lmx.kpu.file
    - group: 'base_msg'
      paths-to-match: '/**'
      displayName: 'base-消息模块'
      packages-to-scan:
        - cn.lmx.kpu.msg
        - cn.lmx.kpu.sms
    - group: 'system'
      displayName: 'system'
      paths-to-match: '/**'
      packages-to-scan: cn.lmx.kpu.system.controller

spring:
  mvc:
    pathmatch:
      # 升级springboot2.6.6后临时处理，防止swagger报错
      matching-strategy: ANT_PATH_MATCHER
  config:
    activate:
      on-profile: common
  lifecycle:
    # 优雅停机宽限期时间
    timeout-per-shutdown-phase: 30s
  servlet:
    # 上传文件最大值
    multipart:
      max-file-size: 512MB
      max-request-size: 512MB
  freemarker:
    suffix: .ftl
    cache: false
    charset: UTF-8
    contentType: text/html
    requestContextAttribute: ctx
    templateEncoding: UTF-8
    templateLoaderPath: classpath:/
    settings:
      defaultEncoding: UTF-8
      url_escaping_charset: UTF-8
      locale: zh_CN

# knife4j 文档通用配置 详情看: Knife4jProperties
knife4j:
  enable: true
  setting:
    language: zh_cn
    swagger-model-name: 实体类列表
    #     是否在每个Debug调试栏后显示刷新变量按钮,默认不显示
    enableReloadCacheParameter: true
    #    是否开启界面中对某接口的版本控制,如果开启，后端变化后Ui界面会存在小蓝点
    enableVersion: true
    #    针对RequestMapping的接口请求类型,在不指定参数类型的情况下,如果不过滤,默认会显示7个类型的接口地址参数,如果开启此配置,默认展示一个Post类型的接口地址
    enableFilterMultipartApis: false
    #    是否开启动态参数调试功能
    enableDynamicParameter: true
    #    是否显示Footer
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: Apache License 2.0 | Copyright  2020 [kpu-cloud](https://github.com/lmx)

server:
  port: 18760
  # 优雅停机
  shutdown: GRACEFUL
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
      force: true
  undertow:
    threads:
      io: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      worker: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分
    direct-buffers: true  # 是否分配的直接内存

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
      enabled: true

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  hystrix:
    enabled: false
  sentinel:
    enabled: true
  client:
    config:
      default:
        # feign client 调用全局超时时间
        connectTimeout: 60000
        readTimeout: 60000
    #支持压缩的mime types
  compression: # 请求压缩
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response: # 响应压缩
      enabled: true

# 测试配置文件覆盖规则
test1: common
test2: common

---
# 相当于 redis.yml
kpu:
  cache:
    type: REDIS
  redis:
    # ip: 10.10.10.181
    ip: 127.0.0.1
    port: 6379
    password: 'lmx123125'
    database: 0

spring:
  config:
    activate:
      on-profile: redis
  cache:
    type: GENERIC
  data:
    redis:
      host: ${kpu.redis.ip}
      password: ${kpu.redis.password}
      port: ${kpu.redis.port}
      database: ${kpu.redis.database}

test1: redis
test2: redis

---
# 相当于 database.yml
kpu:
  # validation-query 参数对不同数据库的支持参考：https://www.cnblogs.com/BonnieWss/p/9100402.html
  oracle: &db-oracle
    db-type: oracle
    validation-query: SELECT 'x' FROM DUAL
    filters: stat,wall,slf4j    # druid不支持使用p6spy打印日志，所以采用druid 的 slf4j 过滤器来打印可执行日志
    username: 'kpu_none'
    password: 'kpu_none'
    driverClassName: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@172.26.3.67:1521:helowin
  mysql: &db-mysql
    filters: stat,wall
    db-type: mysql
    validation-query: SELECT 'x'
    username: 'root'
    password: 'lmx123125'
    # 生产使用原生驱动，开发使用p6spy驱动打印日志
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/kpu_none?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true
#    driverClassName: com.p6spy.engine.spy.P6SpyDriver
#    url: jdbc:p6spy:mysql://127.0.0.1:3306/kpu_none?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true
  sqlserver: &db-sqlserver
    username: 'sa'
    password: '1234@abcd'
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://172.26.3.67:1433;DatabaseName=kpu_none
#    driverClassName: com.p6spy.engine.spy.P6SpyDriver
#    url: jdbc:p6spy:sqlserver://172.26.3.67:1433;DatabaseName=kpu_none
    db-type: sqlserver
    validation-query: SELECT 'x'
    filters: stat,wall
    init:
      separator: GO
  database: # 字段介绍参考 DatabaseProperties
    # 4.x 需要写死 column， 其他模式需要使用其他项目，而非改变此参数
    multiTenantType: NONE
    # 是否不允许写入数据  WriteInterceptor
    isNotWrite: false
    # 是否启用  sql性能规范插件
    isBlockAttack: false
    # 是否启用分布式事务
    isSeata: false
    # 生产环境请设置p6spy = false
    p6spy: true
    # id生成策略
    id-type: CACHE
    hutoolId:
      workerId: 0
      dataCenterId: 0
    cache-id:
      time-bits: 31
      worker-bits: 22
      seq-bits: 10
      epochStr: '2024-02-07'
      boost-power: 3
      padding-factor: 50

# mysql 通用配置
spring:
  config:
    activate:
      on-profile: mysql
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  datasource:
    dynamic:
      enabled: false
    druid:
      enable: true
      # 从这里开始(druid)，中间的这段配置用于 kpu.database.multiTenantType != DATASOURCE 时
      <<: *db-mysql
        # <<: *db-sqlserver
      # <<: *db-oracle
      initialSize: 10
      minIdle: 10
      maxActive: 200
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 'x'
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒
      filters: stat,wall
      filter:
        wall:
          enabled: true
          config:
            strictSyntaxCheck: false
            commentAllow: true
            multiStatementAllow: true
            noneBaseStatementAllow: true
        slf4j:
          enabled: false   # 使用slf4j打印可执行日志时，改成true
          statement-executable-sql-log-enable: true

      # 从这里结束(druid)，中间的这段配置用于 kpu.database.multiTenantType != DATASOURCE 时

      # 以下的2段配置，同时适用于所有模式
      web-stat-filter: # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
        enabled: true
        url-pattern: /*
        exclusions: "*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*"
        session-stat-max-count: 1000
        profile-enable: true
        session-stat-enable: false
      stat-view-servlet: #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
        enabled: true
        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html
        reset-enable: true    #允许清空统计数据
        login-username: ''
        login-password: ''
        allow: ''

mybatis-plus:
  mapper-locations:
    - classpath*:mapper_**/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.lmx.kpu.*.entity;cn.lmx.basic.database.mybatis.typehandler
  typeEnumsPackage: cn.lmx.kpu.*.enumeration
  global-config:
    db-config:
      id-type: INPUT
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
      where-strategy: NOT_EMPTY
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    default-enum-type-handler: cn.lmx.basic.database.mybatis.handlers.MybatisEnumTypeHandler

test1: mysql
test2: mysql
---
# 相当于 rabbitmq.yml
kpu:
  rabbitmq:
    # 若系统中有除了zipkin之外的地方使用了mq ，则一定不能设置成false
    enabled: false
    ip: 127.0.0.1
    port: 5672
    username: 'kpu'
    password: 'kpu'

spring:
  config:
    activate:
      on-profile: rabbitmq
  rabbitmq:
    enabled: ${kpu.rabbitmq.enabled}
    host: ${kpu.rabbitmq.ip}
    port: ${kpu.rabbitmq.port}
    username: ${kpu.rabbitmq.username}
    password: ${kpu.rabbitmq.password}
    listener:
      type: direct # simple direct

test1: rabbitmq
test2: rabbitmq

---
# 开发环境使用 相当于 kpu-boot-server-dev.yml
kpu:
  feign:
    # xxl-job-admin 的地址
    job-server: http://127.0.0.1:8767
  cache:
    type: REDIS
  redis:
    ip: 127.0.0.1
    port: 6379
    password: lmx123125
    database: 0
  rabbitmq:
    enabled: false
    ip: 127.0.0.1
    port: 5672
    username: lmx
    password: lmx
  mysql: &db-mysql-dev
    filters: stat,wall
    db-type: mysql
    validation-query: SELECT 'x'
    username: 'root'
    password: 'lmx123125'
    # 生产使用原生驱动，开发使用p6spy驱动打印日志
    driverClassName: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:mysql://127.0.0.1:3306/kpu_none?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    druid:
      <<: *db-mysql-dev

test1: dev

---
# 生产环境使用 相当于 kpu-boot-server-prod.yml
kpu:
  feign:
    # xxl-job-admin 的地址
    job-server: http://127.0.0.1:8767
  redis:
    ip: 127.0.0.1
    port: 6379
    password: lmx123125
    database: 0
  rabbitmq:
    enabled: false
    ip: 127.0.0.1
    port: 5672
    username: lmx
    password: lmx
  mysql: &db-mysql-prod
    filters: stat,wall
    db-type: mysql
    validation-query: SELECT 'x'
    username: 'root'
    password: 'ZHadmin123.'
    # 生产使用原生驱动，开发使用p6spy驱动打印日志
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3218/kpu_none?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true

  database:
    isNotWrite: true
  file:
    storageType: FAST_DFS  #  FAST_DFS LOCAL MIN_IO ALI_OSS HUAWEI_OSS QINIU_OSS
    publicBucket:
      - public
server:
  port: 28760

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    druid:
      <<: *db-mysql-prod

test1: prod
